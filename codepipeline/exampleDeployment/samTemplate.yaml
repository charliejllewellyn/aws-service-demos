AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Outputs the time

Parameters:
  dynamoDBTablename: 
    Type: String
    Description: DyanmoDB Table name to store provinance
    Default: Artifacts

Resources:
   
  InputBucket:
    Type: AWS::S3::Bucket

  OutputBucket:
    Type: AWS::S3::Bucket

  callStepFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: callStepFunction.lambda_handler
      Runtime: python3.6
      CodeUri: ./callStepFunction
      Policies:
      - AmazonS3FullAccess
      - AWSStepFunctionsFullAccess
      Events:
        MyTimeApi:
          Type: S3
          Properties:
            Bucket: !Ref InputBucket
            Events: s3:ObjectCreated:*
      Timeout: 60
      AutoPublishAlias: live

  writeOutput:
    Type: AWS::Serverless::Function
    Properties:
      Handler: writeOutput.lambda_handler
      Runtime: python3.6
      CodeUri: ./writeOutput
      Policies:
      - AmazonS3FullAccess
      Environment:
        Variables:
          OUTPUT_BUCKET: !Ref OutputBucket
      Timeout: 60

  writeDynamo:
    Type: AWS::Serverless::Function
    Properties:
      Handler: writeDynamo.lambda_handler
      Runtime: python3.6
      CodeUri: ./writeDynamo
      Policies:
      - AmazonDynamoDBFullAccess
      Timeout: 60
      Environment:
        Variables:
          DYNAMODB_TABLENAME: !Ref dynamoDBTablename

  updateDynamo:
    Type: AWS::Serverless::Function
    Properties:
      Handler: updateDynamo.lambda_handler
      Runtime: python3.6
      CodeUri: ./updateDynamo
      Policies:
      - AmazonDynamoDBFullAccess
      Timeout: 60
      Environment:
        Variables:
          DYNAMODB_TABLENAME: !Ref dynamoDBTablename

  inconclusiveDataType:
    Type: AWS::Serverless::Function
    Properties:
      Handler: inconclusiveDataType.lambda_handler
      Runtime: python3.6
      CodeUri: ./inconclusiveDataType
      Timeout: 60

  dataType:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dataType.lambda_handler
      Runtime: python3.6
      CodeUri: ./dataType
      Policies: 
      - AmazonS3FullAccess
      Environment:
        Variables:
          S3_ENDPOINT: ''
      Timeout: 60
      AutoPublishAlias: live
      DeploymentPreference:
        Type: Linear10PercentEvery1Minute
        Alarms:
          - !Ref rekognitionFunctionEvent

  comprehendFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: comprehend.lambda_handler
      Runtime: python3.6
      CodeUri: ./comprehend
      Policies:
      - AmazonS3FullAccess
      - ComprehendFullAccess
      Timeout: 60

  rekognitionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: rekognition.lambda_handler
      Runtime: python3.6
      CodeUri: ./rekDetectLabels
      Policies:
      - AmazonS3FullAccess
      - AmazonRekognitionFullAccess
      Timeout: 60
           
  rekognitionFaceFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: rekognition.lambda_handler
      Runtime: python3.6
      CodeUri: ./rekDetectFaces
      Policies:
      - AmazonS3FullAccess
      - AmazonRekognitionFullAccess
      Timeout: 60

  rekognitionTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: rekognition.lambda_handler
      Runtime: python3.6
      CodeUri: ./rekDetectText
      Policies:
      - AmazonS3FullAccess
      - AmazonRekognitionFullAccess
      Timeout: 60

  rekognitionComprehendFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: comprehend.lambda_handler
      Runtime: python3.6
      CodeUri: ./rekComprehend
      Policies:
      - ComprehendFullAccess
      Timeout: 60
           
  DefaultFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: catchall.lambda_handler
      Runtime: python3.6
      CodeUri: ./catchall
      Timeout: 60

  StepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Demo-stepFunction-Role
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
                  Service: !Join [ '', [ 'states.', !Ref "AWS::Region", '.amazonaws.com' ] ]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              Resource: "*"

  StepFunction:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      StateMachineName: Demo-state-machine
      DefinitionString: 
        Fn::Sub:
          - |
            {
              "Comment": "A sample data prcoessing application",
              "StartAt": "IdentifyDataType",
              "States": {
                "IdentifyDataType": {
                  "Type": "Task",
                  "Resource": "${dataType}",
                  "ResultPath": "$",
                  "Next": "writeDynamo"
                },
                "writeDynamo": {
                  "Type": "Task",
                  "Resource": "${writeDynamo}",
                  "ResultPath": "$",
                  "Next": "RouteDataType"
                },
              "RouteDataType": {
              "Type" : "Choice",
              "Choices": [{
                "Variable": "$[0].dataType",
                "StringEquals": "image/jpeg",
                "Next": "runRekognition"
              },{
                "Variable": "$[0].dataType",
                "StringEquals": "text/plain",
                "Next": "runComprehend"
              }],
              "Default": "inconclusiveDataType"
            },
                "runRekognition": {
                  "Type": "Parallel",
                        "Branches": [
                    {
                     "StartAt": "detectLabels",
                     "States": {
                       "detectLabels": {
                         "Type": "Task",
                         "Resource": "${rekognition}",
                         "End": true
                       }
                     }
                   },
                   {
                     "StartAt": "detectFaces",
                     "States": {
                       "detectFaces": {
                         "Type": "Task",
                         "Resource": "${rekognitionFaces}",
                         "End": true
                       }
                     }
                   },
                   {
                     "StartAt": "detectText",
                     "States": {
                       "detectText": {
                         "Type": "Task",
                         "Resource": "${rekognitionText}",
                         "Next": "ifTextFoundProcess"
                       },
                       "ifTextFoundProcess": {
                       	"Type": "Choice",
                       	"Choices": [{
                       		"Variable": "$[2].TextDetections",
                       		"StringEquals": "",
                       		"Next": "runRekComprehend"
                       	}]
                       },
                       "runRekComprehend": {
                       	"Type": "Task",
                       	"Resource": "${rekcognitionComprehend}",
                       	"End": true
                       }
                     }
                   }
                  ],
                  "Next": "writeOutput"
                },
                "runComprehend": {
                  "Type": "Task",
                  "Resource": "${comprehend}",
                  "Next": "writeOutput"
                },
                "inconclusiveDataType": {
                  "Type": "Task",
                  "Resource": "${inconclusiveDataType}",
                  "End": true
                },
                "writeOutput": {
                  "Type": "Task",
                  "Resource": "${writeOutput}",
                  "Next": "updateDynamo"
                },
                "updateDynamo": {
                  "Type": "Task",
                  "Resource": "${updateDynamo}",
                  "End": true
                }
              }
            }
          - { dataType: !GetAtt dataType.Arn, default: !GetAtt DefaultFunction.Arn, comprehend: !GetAtt comprehendFunction.Arn, rekognition: !GetAtt rekognitionFunction.Arn, writeOutput: !GetAtt writeOutput.Arn, writeDynamo: !GetAtt writeDynamo.Arn, updateDynamo: !GetAtt updateDynamo.Arn, inconclusiveDataType: !GetAtt inconclusiveDataType.Arn, rekognitionFaces: !GetAtt rekognitionFaceFunction.Arn, rekognitionText: !GetAtt rekognitionTextFunction.Arn, rekcognitionComprehend: !GetAtt rekognitionComprehendFunction.Arn }
      RoleArn: !GetAtt StepFunctionRole.Arn

  rekognitionFunctionEvent:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: True
      AlarmDescription: Codepipeline demo - Rekognition Function error rate
      AlarmName: rekognitionFunctionEvent
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 3.0
      TreatMissingData: notBreaching
      Unit: Count

  callStepFunctionFunctionEvent:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmDescription: Codepipeline demo - callStepFunction Function error rate
      AlarmName: callStepFunctionFunctionEvent
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 3.0
      TreatMissingData: notBreaching
      Unit: Count

  writeOutputFunctionEvent:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmDescription: Codepipeline demo - writeOutput Function error rate
      AlarmName: writeOutputFunctionEvent
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 3.0
      TreatMissingData: notBreaching
      Unit: Count

  writeDynamoFunctionEvent:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmDescription: Codepipeline demo - writeDynamo Function error rate
      AlarmName: writeDynamoFunctionEvent
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 3.0
      TreatMissingData: notBreaching
      Unit: Count

  updateDynamoFunctionEvent:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmDescription: Codepipeline demo - updateDynamo Function error rate
      AlarmName: updateDynamoFunctionEvent
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 3.0
      TreatMissingData: notBreaching
      Unit: Count

  inconclusiveDataTypeFunctionEvent:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmDescription: Codepipeline demo - inconclusiveDataType Function error rate
      AlarmName: inconclusiveDataTypeFunctionEvent
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 3.0
      TreatMissingData: notBreaching
      Unit: Count

  dataTypeFunctionEvent:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmDescription: Codepipeline demo - dataType Function error rate
      AlarmName: dataTypeFunctionEvent
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 3.0
      TreatMissingData: notBreaching
      Unit: Count

  comprehendFunctionEvent:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmDescription: Codepipeline demo - comprehend Function error rate
      AlarmName: comprehendFunctionEvent
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 3.0
      TreatMissingData: notBreaching
      Unit: Count

  DefaultFunctionEvent:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmDescription: Codepipeline demo - Default Function error rate
      AlarmName: DefaultFunctionEvent
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 3.0
      TreatMissingData: notBreaching
      Unit: Count

  dyanmoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S
      KeySchema:
        -
          AttributeName: id
          KeyType: HASH
      TableName: !Ref dynamoDBTablename
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  InputBucket:
    Description: The bucket where objects are uploaded to trigger the data pipepline
    Value: !Ref InputBucket
