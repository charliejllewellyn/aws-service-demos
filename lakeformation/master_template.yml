AWSTemplateFormatVersion: "2010-09-09"
  
Description: "This cloudformation stack sets up the roles required to operate LakeFormation"

Parameters:
  LakeFormationAdministratorUsername:
    Description: Username for AWS administrator
    Type: String
    Default: LakeFormationAdmin

Resources:
  LakeFormationAdministratorPassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Password for Lake Formation administrator
      GenerateSecretString:
        SecretStringTemplate: !Join ['', ['{"username": "', !Ref LakeFormationAdministratorUsername, '"}' ]]
        PasswordLength: 16
        GenerateStringKey: "password"
      Name: LakeFormationAdministratorsPassword
      Tags:
        - Key: ProjectName
          Value: LakeFormationSetup

  LakeFormationSAdministratorUser:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Join ['', ['{{resolve:secretsmanager:', !Ref LakeFormationAdministratorPassword, ':SecretString:password}}' ]]
        PasswordResetRequired: No
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
      Policies:
        -
          PolicyName: "LakeFormationAdministratorAccess"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - lakeformation:*
              - cloudtrail:DescribeTrails
              - cloudtrail:LookupEvents
              - iam:PutRolePolicy
              - iam:CreateServiceLinkedRole
              Resource: "*"
            - Effect: Deny
              Action:
              - lakeformation:PutDataLakeSettings
              Resource: "*"
        -
          PolicyName: "LakeFormationPassRole"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: PassRolePermissions
              Effect: Allow
              Action:
              - iam:PassRole
              Resource:
              - !Join ['', ['arn:aws:iam::', !Ref "AWS::AccountId", ':role/', !Ref LakeFormationWorkflowRole ]]
      UserName: !Ref LakeFormationAdministratorUsername

  LakeFormationWorkflowRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "glue.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole

  LakeFormationDataAccessRole: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "LakeFormationDataAccessRole"
      PolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Sid: Lakeformation
          Effect: Allow
          Action:
          - lakeformation:GetDataAccess
          - lakeformation:GrantPermissions
          Resource: "*"
      Roles: 
        - !Ref LakeFormationWorkflowRole

  LakeFormationPassRole:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "LakeFormationPassRole"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: PassRolePermissions
          Effect: Allow
          Action:
          - iam:PassRole
          Resource:
          - !Join ['', ['arn:aws:iam::', !Ref "AWS::AccountId", ':role/', !Ref LakeFormationWorkflowRole ]]
      Roles:
        - !Ref LakeFormationWorkflowRole

  LakeFormationAdminSetup:
    Type: AWS::LakeFormation::DataLakeSettings
    Properties: 
      Admins:
        - DataLakePrincipalIdentifier: !GetAtt LakeFormationSAdministratorUser.Arn

  LakeFormationBucket:
    Type: AWS::S3::Bucket
